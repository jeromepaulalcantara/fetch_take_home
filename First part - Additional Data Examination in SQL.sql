--- check for the null values
-- USERS Table
SELECT 'USERS' AS TableName, 'BIRTH_DATE' AS ColumnName, COUNT(*) AS MissingCount 
FROM USER_TAKEHOME WHERE BIRTH_DATE IS NULL
UNION ALL
SELECT 'USERS', 'STATE', COUNT(*) FROM USER_TAKEHOME WHERE STATE IS NULL
UNION ALL
SELECT 'USERS', 'LANGUAGE', COUNT(*) FROM USER_TAKEHOME WHERE LANGUAGE IS NULL
UNION ALL
SELECT 'USERS', 'GENDER', COUNT(*) FROM USER_TAKEHOME WHERE GENDER IS NULL;

-- TRANSACTIONS Table
SELECT 'TRANSACTIONS' AS TableName, 'BARCODE' AS ColumnName, COUNT(*) AS MissingCount 
FROM TRANSACTION_TAKEHOME WHERE BARCODE IS NULL;
SELECT 'TRANSACTIONS' AS TableName, 'FINAL_SALE' AS ColumnName, COUNT(*) AS MissingCount 
FROM TRANSACTION_TAKEHOME WHERE FINAL_SALE IS NULL;

-- PRODUCTS Table
SELECT 'PRODUCTS' AS TableName, 'CATEGORY_1' AS ColumnName, COUNT(*) AS MissingCount 
FROM PRODUCTS_TAKEHOME WHERE CATEGORY_1 IS NULL
UNION ALL
SELECT 'PRODUCTS', 'CATEGORY_2', COUNT(*) FROM PRODUCTS_TAKEHOME WHERE CATEGORY_2 IS NULL
UNION ALL
SELECT 'PRODUCTS', 'CATEGORY_3', COUNT(*) FROM PRODUCTS_TAKEHOME WHERE CATEGORY_3 IS NULL
UNION ALL
SELECT 'PRODUCTS', 'CATEGORY_4', COUNT(*) FROM PRODUCTS_TAKEHOME WHERE CATEGORY_4 IS NULL
UNION ALL
SELECT 'PRODUCTS', 'MANUFACTURER', COUNT(*) FROM PRODUCTS_TAKEHOME WHERE MANUFACTURER IS NULL
UNION ALL
SELECT 'PRODUCTS', 'BRAND', COUNT(*) FROM PRODUCTS_TAKEHOME WHERE BRAND IS NULL
UNION ALL
SELECT 'PRODUCTS', 'BARCODE', COUNT(*) FROM PRODUCTS_TAKEHOME WHERE BARCODE IS NULL;

-- Non-ASCII characters in STORE_NAME
SELECT COUNT(*) AS NonASCII_StoreName 
FROM TRANSACTION_TAKEHOME 
WHERE STORE_NAME COLLATE Latin1_General_BIN LIKE '%[^ -~]%';

-- Non-ASCII characters in CATEGORY_2, CATEGORY_3, CATEGORY_4, MANUFACTURER, BRAND
SELECT 'CATEGORY_2' AS ColumnName, COUNT(*) FROM PRODUCTS_TAKEHOME WHERE CATEGORY_2 COLLATE Latin1_General_BIN LIKE '%[^ -~]%'
UNION ALL
SELECT 'CATEGORY_3', COUNT(*) FROM PRODUCTS_TAKEHOME WHERE CATEGORY_3 COLLATE Latin1_General_BIN LIKE '%[^ -~]%'
UNION ALL
SELECT 'CATEGORY_4', COUNT(*) FROM PRODUCTS_TAKEHOME WHERE CATEGORY_4 COLLATE Latin1_General_BIN LIKE '%[^ -~]%'
UNION ALL
SELECT 'MANUFACTURER', COUNT(*) FROM PRODUCTS_TAKEHOME WHERE MANUFACTURER COLLATE Latin1_General_BIN LIKE '%[^ -~]%'
UNION ALL
SELECT 'BRAND', COUNT(*) FROM PRODUCTS_TAKEHOME WHERE BRAND COLLATE Latin1_General_BIN LIKE '%[^ -~]%';

-----check for transactions that have userIDs not present in the user table
SELECT COUNT(*) FROM TRANSACTION_TAKEHOME TT WHERE
NOT EXISTS (select 1 FROM USER_TAKEHOME TTH WHERE TTH.ID=TT.USER_ID)

-----check for transactions that have barcodes not present in the product table
SELECT COUNT(*) FROM TRANSACTION_TAKEHOME TT WHERE
NOT EXISTS (SELECT 1 FROM PRODUCTS_TAKEHOME PTH WHERE PTH.BARCODE=TT.BARCODE)
AND TT.BARCODE IS NOT NULL

------check for duplicated barcodes but one of the other columns are different
SELECT PT.* FROM PRODUCTS_TAKEHOME PT
INNER JOIN PRODUCTS_TAKEHOME PTH ON PT.BARCODE=PTH.BARCODE 
AND (
	PT.BRAND <> PTH.BRAND 
	OR PT.MANUFACTURER <> PTH.MANUFACTURER
	OR PT.CATEGORY_1 <> PTH.CATEGORY_1
	OR PT.CATEGORY_2 <> PTH.CATEGORY_2
	OR PT.CATEGORY_3 <> PTH.CATEGORY_3
	OR PT.CATEGORY_4 <> PTH.CATEGORY_4
	)
ORDER BY BARCODE

------check for records where PURCHASE_DATE is greater than SCAN_DATE
SELECT COUNT(*) FROM TRANSACTION_TAKEHOME WHERE 
SCAN_DATE < PURCHASE_DATE 



-- Check for extreme values in FINAL_QUANTITY (outlier based from boxplot)
SELECT * FROM TRANSACTION_TAKEHOME 
WHERE CAST(REPLACE(FINAL_QUANTITY,'zero',0) AS float) > 250;

-- Check for extreme values in FINAL_SALE  (outlier based from boxplot)
SELECT DISTINCT * FROM TRANSACTION_TAKEHOME 
WHERE CAST(FINAL_SALE AS float) > 400 OR CAST(FINAL_SALE AS float) BETWEEN 200 AND 300;